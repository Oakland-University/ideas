import org.apache.tools.ant.filters.ReplaceTokens

plugins {  
    //Gradle builtins
    id 'java'
    id 'war'
    id 'maven-publish'
    //Third party plugins
    id 'com.diffplug.gradle.spotless' version '3.14.0'
    id 'com.moowork.node' version '1.2.0'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'net.linguica.maven-settings' version '0.5'
    id 'org.springframework.boot' version '2.1.1.RELEASE'
}

//Configuring moowork node plugin
node {
  //Version of nodejs
  version = '10.14.2'
  //Download regardless of system
  download = true
  // Set the work directory for npm
  npmWorkDir = file("${project.buildDir}/npm")
  // Set directory for node_modules 
  nodeModulesDir = file("src/main/react")
}

war {
    archiveName project.name + '.war'
}

bootWar {
    archiveName project.name + '.war'
}

spotless {
  java {
    googleJavaFormat()
    importOrder "edu", "java", "com org", ""
    removeUnusedImports()
    trimTrailingWhitespace()
  }
}

group = 'edu.oakland.portlet'
version = '1.0.0'

publishing {
    publications {
        mavenWeb(MavenPublication) {
            from components.web
        }
    }

    repositories {
        maven {
            url "https://maven.oakland.edu/nexus/content/repositories/uPortal"
            name "nexus"
        }
    }
}


//Java version we're working with
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


configurations {
	providedRuntime
}

task runBuild(type: NpmTask) {
  args = ['run', 'build']
}

task copyTask(type: Copy) {
  from 'src/main/react/build/static/'
  into 'src/main/webapp/'
}

clean.doFirst{
  delete 'src/main/webapp/js'
}

clean.finalizedBy(npm_install)
npm_install.finalizedBy(runBuild)
runBuild.finalizedBy(copyTask)
copyTask.finalizedBy 'spotlessApply'


processResources {

    filesMatching('**/application.properties') {
      def props = new Properties()

      file(System.getenv('PORTAL_HOME') + '/global.properties').withInputStream {
        props.load(it)
      }

      file(System.getenv('PORTAL_HOME') + '/uPortal.properties').withInputStream {
        props.load(it)
      }

      filter(ReplaceTokens, tokens: props)
    }
}


dependencies {
	implementation 'org.apache.commons:commons-lang3:3.4'
	implementation 'org.jasypt:jasypt:1.9.2'
	implementation 'org.springframework:spring-jdbc'
  implementation 'org.jasig.portal:uPortal-soffit-renderer:5.6.0'
  implementation 'edu.oakland:soffit-auth:0.0.3'
	compile('org.postgresql:postgresql')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
  runtime('org.springframework.boot:spring-boot-properties-migrator')
}
